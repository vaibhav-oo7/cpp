{
	// Place your cpp workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"cppsnip": {
		"prefix": "cptemplate",
		"body": [
		  "#include<bits/stdc++.h>",
		  "#include <ext/pb_ds/assoc_container.hpp>",
		  "using namespace __gnu_pbds;",
		  "using namespace std;",
		  "",
		  "#define ff              first",
		  "#define ss              second",
		  "#define int             long long",
		  "#define pb              push_back",
		  "#define mp              make_pair",
		  "#define mt              make_tuple",
		  "#define pii             pair<int,int>",
		  "#define vi              vector<int>",
		  "#define mii             map<int,int>",
		  "#define pqb             priority_queue<int>",
		  "#define pqs             priority_queue<int,vi,greater<int> >",
		  "#define setbits(x)      __builtin_popcountll(x)",
		  "#define mod             1000000007",
		  "#define inf             1e18",
		  "#define ps(x,y)         fixed<<setprecision(y)<<x",
		  "#define mk(arr,n,type)  type *arr=new type[n];",
		  "#define range(a,b)        substr(a,b-a+1)",
		  "#define w(x)            int x; cin>>x; while(x--)",
		  "#define trace(x)         cerr<<#x<<\": \"<<x<<\" \"<<endl;",
		  "",
		  "mt19937                 rng(chrono::steady_clock::now().time_since_epoch().count());",
		  "",
		  "typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds;",
		  "",
		  "void ab_d(){",
		  "    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);",
		  "#ifndef ONLINE_JUDGE",
		  "    freopen(\"input.txt\",\"r\",stdin);",
		  "    freopen(\"output.txt\",\"w\",stdout);",
		  "#endif",
		  "}",
		  "",
		  "int32_t main()",
		  "{",
		  "    ab_d();",
		  "",
		  "    return 0;",
		  "}"
		],
		"description": ""
	  },
	  "cppsnip2": {
		"prefix": "standard",
		"body": [
		  "#include<bits/stdc++.h>",
		  "",
		  "using namespace std;",
		  "",
		  "int main(){",
		  "#ifndef ONLINE_JUDGE",
		  "    freopen(\"input.txt\",\"r\",stdin);",
		  "    freopen(\"output.txt\",\"w\",stdout);",
		  "#endif",
		  "    int n;",
		  "    cin>>n; //no of elements in array",
		  "    vector<int>arr;",
		  "",
		  "    for(int i=0;i<n;i++){",
		  "        int x;",
		  "        cin>>x;",
		  "        arr.push_back(x);",
		  "    }",
		  "",
		  "    return 0;",
		  "}",
		  ""
		],
		"description": ""
	  }
}